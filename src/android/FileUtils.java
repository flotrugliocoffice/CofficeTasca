package com.tasca.android;

import android.os.Environment;

import java.io.File;

/**
 * Created by carlo on 04/08/2017.
 */

public class FileUtils
{
    public static final File getImageCacheDir()
    {
        File imageCacheDir = Environment.getExternalStoragePublicDirectory("tasca");
        imageCacheDir.mkdirs();
        return imageCacheDir;
    }

    /**
     * return the file associated by the url, the filename is generated by:
     * Param url.hashcode() + ".TMP"
     *
     * @param url the url containing the image
     * @return the file associated with the param url
     */
    public static final File getLocalImageFile(String url)
    {
        File imageFile = new File(getImageCacheDir(), url.hashCode() + ".tmp");
        return imageFile;
    }

    /**
     * Return the size in byte of the cache directory
     * @return size in byte
     */
    public static long getCacheSize()
    {
        return getFolderSize(getImageCacheDir());
    }


    /**
     * Recursively check the File tree and get the file size for a directory
     * including all the contained files and directories
     * @param directory the directory to be checked
     * @return the passed directory and subdirectory size, 0 if null, empty or not a directorys
     */
    private static long getFolderSize(File directory) {
        if(directory == null || !directory.isDirectory()) {
            return 0;
        }
        long length = 0;
        File[] fileList = directory.listFiles();
        if(fileList != null) {
            for (File file : directory.listFiles()) {
                if (file.isFile())
                    length += file.length();
                else
                    length += getFolderSize(file);
            }
        }
        return length;
    }
}
